<?xml version="1.0" encoding="UTF-8"?>
<!-- ~ Copyright 2012 FuseSource ~ ~ Licensed under the Apache License, Version 
	2.0 (the "License"); ~ you may not use this file except in compliance with 
	the License. ~ You may obtain a copy of the License at ~ ~ http://www.apache.org/licenses/LICENSE-2.0 
	~ ~ Unless required by applicable law or agreed to in writing, software ~ 
	distributed under the License is distributed on an "AS IS" BASIS, ~ WITHOUT 
	WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. ~ See the 
	License for the specific language governing permissions and ~ limitations 
	under the License. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:osgi="http://www.springframework.org/schema/osgi" xmlns:cxf="http://camel.apache.org/schema/cxf"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf-2.8.3.xsd
       http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd">

	<bean id="loggingOutInterceptor" class="org.apache.cxf.interceptor.LoggingOutInterceptor" />
	<bean id="loggingInInterceptor" class="org.apache.cxf.interceptor.LoggingInInterceptor" />
	<bean id="payloadImpl" class="com.vidur.news.bean.impl.PayloadImpl" />
	<bean id="newsSplitImpl" class="com.vidur.news.bean.impl.NewsSplitImpl" />
	<!-- A POJO that implements the JMS message listener -->
	<bean id="queueListener" class="com.vidur.news.bean.impl.QueueListener" />
	<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://localhost:61616" />
		<property name="userName" value="smx" />
		<property name="password" value="smx" />
	</bean>
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		init-method="start" destroy-method="stop">
		<property name="maxConnections" value="8" />
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>
	<bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
		<property name="connectionFactory" ref="pooledConnectionFactory" />
		<property name="concurrentConsumers" value="10" />
	</bean>
	<bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="configuration" ref="jmsConfig" />

		<!-- if we are using transacted then enable CACHE_CONSUMER (if not using 
			XA) to run faster see more details at: http://camel.apache.org/jms <property 
			name="transacted" value="true"/> <property name="cacheLevelName" value="CACHE_CONSUMER" 
			/> -->
	</bean>

	<!-- Queue configuration Starts -->
	<!-- <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent" 
		> <property name="brokerURL" value="tcp://localhost:61616" /> <property name="userName" 
		value="smx" /> <property name="password" value="smx" /> </bean> -->
	<!-- Cached Connection Factory to wrap the ActiveMQ connetion -->
	<!-- <bean id="cachedConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory"> 
		<property name="targetConnectionFactory" ref="activeMQConnectionFactory"></property> 
		<property name="sessionCacheSize" value="10"></property> <property name="reconnectOnException" 
		value="true"></property> </bean> -->
	<!-- Queue configuration Ends -->

	<!-- this is an camel cxf endpoint that takes its configuration from the 
		interface generated by wsdl2java -->
	<cxf:cxfEndpoint id="camelNewsImpl" address="http://localhost:9090/newsImpl"
		serviceClass="com.vidur.news.News">
	</cxf:cxfEndpoint>

	<!-- Camel route Starts -->
	<camelContext id="com.vidur.news.news-ws-camel-service"
		xmlns="http://camel.apache.org/schema/spring">
		<route id="cxfInterfaceToNewsCollection">
			<from uri="timer://newsFieldJournalist?fixedRate=true&amp;period=3600000" />
			<!-- <log message="Payload before payloadimpl: ${body}" /> -->
			<process ref="payloadImpl" />
			<!-- <log message="Payload After payloadimpl: ${body}" /> -->
			<to uri="cxf:bean:camelNewsImpl" />
			<!-- <log message="Payload After camelNewsImpl: ${body}" /> -->
			<process ref="newsSplitImpl" />
			<log message="Payload After newsSplitImpl: ${body}" />
			<!-- <to uri="activemq:queue:storyQueue" /> -->
		</route>

		<route id="storyQueueListener">
			<from uri="activemq:queue:storyQueue?destination.consumer.exclusive=true" />
			<log message="Payload before queueListener: ${body}" />
			<bean ref="queueListener" />
			<log message="Payload After queueListener: ${body}" />
		</route>

	</camelContext>
	<!-- The Spring message listener container configuration -->
	<!-- <jms:listener-container container-type="default" connection-factory="cachedConnectionFactory" 
		acknowledge="auto"> <jms:listener destination="activemq:queue:storyQueue" 
		ref="queueListener" method="onMessage" /> </jms:listener-container> -->
</beans>
